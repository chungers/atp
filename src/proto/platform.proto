package proto.platform;

//option optimize_for = LITE_RUNTIME;

import "indicator.proto";


// An identifier for a strategy, its variation, signals, etc.
message Id {

  // strategy name
  required string name = 1;

  // the variation (e.g. of different parameter) -- to distinguish
  // different strategy variations that may be run concurrently (as in
  // simulation or backtesting).
  optional string variant = 2;

  // the component e.g. AAPL.STK and SPX.IND -- this is used
  // to identify the actual signal within a strategy
  optional string source = 3;

  // the event associated with the signal source (e.g. ASK)
  optional string event = 4;

  // some label, eg. 'ohlc', 'sma-20', 'order', etc.
  repeated string label = 5;

};

message ControlMessage {

  required uint64 timestamp = 1;

  optional Id target = 2;

};

message Signal {

  required Id id = 1;

  required uint64 duration_micros = 2;  // 10 ^ 7 for 10 seconds
  required uint64 interval_micros = 3;  // 1000 for 1 msec bar

  optional bool use_ohlc = 4;
  optional bool std_out = 5;

  message Indicator {

    required string name = 1;
    required proto.indicator.IndicatorConfig config = 2;

    // Special handling if the indicator is to use one of the
    // OHLC values as its source.
    enum OhlcSource {
      OPEN  = 0;
      HIGH  = 1;
      LOW   = 2;
      CLOSE = 3;
    };
    optional OhlcSource ohlc_source = 3;
  };

  repeated Indicator indicator = 6;
};

message Strategy {

  required Id id = 1;
  optional string comments = 2;

  repeated Signal signal = 3;
};
